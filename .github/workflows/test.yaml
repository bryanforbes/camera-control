name: 'test-build'
on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/renovate.json'
      - '.github/workflows/release.yaml'
      - 'README.md'
      - 'LICENSE'
  pull_request:

jobs:
  test-build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
        include:
          - platform: macos-latest
            rust-targets: 'aarch64-apple-darwin, x86_64-apple-darwin'
            tauri-args: '--target universal-apple-darwin'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-targets }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libudev-dev

      - uses: Swatinem/rust-cache@v2
        name: Set up Rust cache
        with:
          workspaces: src-tauri

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile

      - name: Run unit tests
        run: |
          cargo test --manifest-path src-tauri/Cargo.toml

      - uses: tauri-apps/tauri-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          args: ${{ matrix.tauri-args }}
