name: 'test-build'
on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/renovate.json'
      - '.github/workflows/release.yaml'
      - 'README.md'
      - 'LICENSE'
      - 'docs/**'
      - '*.md'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: actions/dependency-review-action@v4

  test-build:
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-15, ubuntu-22.04, windows-latest]
        include:
          - platform: macos-15
            rust-targets: 'aarch64-apple-darwin, x86_64-apple-darwin'
            tauri-args: '--target universal-apple-darwin'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v5

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-targets }}
          components: 'clippy'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Setup node
        uses: actions/setup-node@v6
        with:
          node-version: 24
          cache: 'pnpm'

      - name: Install dependencies (ubuntu only)
        if: startsWith(matrix.platform, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libudev-dev

      - uses: Swatinem/rust-cache@v2
        name: Set up Rust cache
        with:
          workspaces: src-tauri
          key: ${{ matrix.platform }}
          save-if: ${{ github.ref == 'refs/heads/master' }}

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint files (macOS only)
        if: startsWith(matrix.platform, 'macos-')
        run: |
          cargo clippy --manifest-path src-tauri/Cargo.toml --no-deps
          pnpm check
          pnpm lint

      - name: Run unit tests
        run: |
          cargo test --manifest-path src-tauri/Cargo.toml

      - uses: tauri-apps/tauri-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          args: ${{ matrix.tauri-args }}
